"""Initial database setup

Revision ID: 3cdd80d45f77
Revises: 
Create Date: 2025-05-18 11:45:46.272630

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy import Text
# from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '3cdd80d45f77'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('permissions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('vip_levels',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=80), nullable=False),
    sa.Column('sub_account_limit', sa.Integer(), nullable=False),
    sa.Column('monthly_price', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('quarterly_price', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('annual_price', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('lifetime_price', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('permissions_config', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('features',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('identifier', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('base_url', sa.String(length=255), nullable=True),
    sa.Column('icon', sa.String(length=100), nullable=True),
    sa.Column('is_core_feature', sa.Boolean(), nullable=True),
    sa.Column('trial_days', sa.Integer(), nullable=True),
    sa.Column('min_vip_level_required_id', sa.Integer(), nullable=True),
    sa.Column('is_enabled', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['min_vip_level_required_id'], ['vip_levels.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    with op.batch_alter_table('features', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_features_identifier'), ['identifier'], unique=True)

    op.create_table('role_permissions',
    sa.Column('role_name', sa.String(length=50), nullable=False),
    sa.Column('permission_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['permission_id'], ['permissions.id'], ),
    sa.PrimaryKeyConstraint('role_name', 'permission_id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=80), nullable=False),
    sa.Column('password_hash', sa.String(length=256), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('phone_number', sa.String(length=20), nullable=True),
    sa.Column('role', sa.String(length=50), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('vip_level_id', sa.Integer(), nullable=True),
    sa.Column('vip_expiry_date', sa.DateTime(), nullable=True),
    sa.Column('parent_user_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('last_login_at', sa.DateTime(), nullable=True),
    sa.Column('last_login_ip', sa.String(length=45), nullable=True),
    sa.ForeignKeyConstraint(['parent_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['vip_level_id'], ['vip_levels.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('phone_number')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_users_username'), ['username'], unique=True)

    op.create_table('dynamic_menu_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('icon', sa.String(length=100), nullable=True),
    sa.Column('url', sa.String(length=255), nullable=False),
    sa.Column('feature_identifier', sa.String(length=100), nullable=True),
    sa.Column('required_permission_name', sa.String(length=100), nullable=True),
    sa.Column('order', sa.Integer(), nullable=True),
    sa.Column('is_enabled', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['feature_identifier'], ['features.identifier'], ),
    sa.ForeignKeyConstraint(['parent_id'], ['dynamic_menu_items.id'], ),
    sa.ForeignKeyConstraint(['required_permission_name'], ['permissions.name'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('feedbacks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('category', sa.String(length=100), nullable=True),
    sa.Column('submitted_at', sa.DateTime(), nullable=True),
    sa.Column('resolved_at', sa.DateTime(), nullable=True),
    sa.Column('resolver_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['resolver_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('feedbacks', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_feedbacks_user_id'), ['user_id'], unique=False)

    op.create_table('subscriptions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('vip_level_id', sa.Integer(), nullable=False),
    sa.Column('start_date', sa.DateTime(), nullable=False),
    sa.Column('end_date', sa.DateTime(), nullable=False),
    sa.Column('payment_type', sa.String(length=50), nullable=True),
    sa.Column('amount_paid', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('transaction_id', sa.String(length=255), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['vip_level_id'], ['vip_levels.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('subscriptions', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_subscriptions_user_id'), ['user_id'], unique=False)

    op.create_table('user_activity_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('target_user_id', sa.Integer(), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('action', sa.String(length=255), nullable=False),
    sa.Column('details', sa.JSON(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['target_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('user_activity_logs', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_activity_logs_target_user_id'), ['target_user_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_user_activity_logs_user_id'), ['user_id'], unique=False)

    op.create_table('user_feature_trials',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('feature_id', sa.Integer(), nullable=False),
    sa.Column('trial_start_at', sa.DateTime(), nullable=False),
    sa.Column('trial_end_at', sa.DateTime(), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['feature_id'], ['features.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'feature_id', name='uq_user_feature_trial')
    )
    with op.batch_alter_table('user_feature_trials', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_feature_trials_feature_id'), ['feature_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_user_feature_trials_user_id'), ['user_id'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user_feature_trials', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_feature_trials_user_id'))
        batch_op.drop_index(batch_op.f('ix_user_feature_trials_feature_id'))

    op.drop_table('user_feature_trials')
    with op.batch_alter_table('user_activity_logs', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_activity_logs_user_id'))
        batch_op.drop_index(batch_op.f('ix_user_activity_logs_target_user_id'))

    op.drop_table('user_activity_logs')
    with op.batch_alter_table('subscriptions', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_subscriptions_user_id'))

    op.drop_table('subscriptions')
    with op.batch_alter_table('feedbacks', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_feedbacks_user_id'))

    op.drop_table('feedbacks')
    op.drop_table('dynamic_menu_items')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_username'))
        batch_op.drop_index(batch_op.f('ix_users_email'))

    op.drop_table('users')
    op.drop_table('role_permissions')
    with op.batch_alter_table('features', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_features_identifier'))

    op.drop_table('features')
    op.drop_table('vip_levels')
    op.drop_table('permissions')
    # ### end Alembic commands ###
